plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.asciidoctor.jvm.convert" version "3.3.2"  // (1)
}

group = 'com.onlog'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt // (2)
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Spring boot 3.x이상에서 QueryDsl 패키지 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    testImplementation 'org.testng:testng:7.1.0'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor' // (3)
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // (4)

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

ext { // (5)
    snippetsDir = file('build/generated-snippets')
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

test { // 스니펫 생성 test 테스크 설정
    outputs.dir snippetsDir
}

asciidoctor { // (7)
    inputs.dir snippetsDir // (8)
    configurations 'asciidoctorExt' // (9)
    dependsOn test // (10)
}

bootJar { // jar의 static/docs에 문서 복사
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'BOOT-INF/classes/static/docs'
    }
}

tasks.register('copyDocument', Copy) { // build/docs 문서를 resources에 복사
    dependsOn asciidoctor

    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}
